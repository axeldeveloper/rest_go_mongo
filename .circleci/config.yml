version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.12 #
      # CircleCI PostgreSQL images available at: https://hub.docker.com/r/circleci/postgres/
      - image: circleci/mongo:3.4
        environment: # environment variables for primary container
          MONGO_INITDB_ROOT_USERNAME: prisma
          MONGO_INITDB_ROOT_PASSWORD: prisma
    # directory where steps are run. Path must conform to the Go Workspace requirements
    # working_directory: /go/src/github.com/rest_go_mongo
    # working_directory: ~/

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: go env
      - run:
          name: Create Mongo Super user
          command: |
            mongo --eval 'db.createUser({ user: "user", pwd: "password", roles: [ { role: "root", db: "admin" } ] });'
            mongo -u user -p password --authenticationDatabase admin --eval 'db.getUsers()'  # THIS FAILS

      
      
      #- run: go mod download
      # Normally, this step would be in a custom primary image;
      # we've added it here for the sake of explanation.
      - run: go get -u github.com/globalsign/mgo
      - run: go get -u github.com/gorilla/mux
      - run: go get -u gotest.tools/gotestsum

     
      

